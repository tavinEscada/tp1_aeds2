EasyTest An Approach for Automatic Test Cases Generation from UML Activity Diagrams
The test cases generation is one of the great challenges for the Software Test Community because of the development efforts and costs to create, validate, and test a large number of test cases. The automation of this process increases testing productivity and reduces labor hours. One technique that has been adopted to automate test cases generation is Model-Based Testing (MBT).
This paper proposes the EasyTest approach to generate test cases from UML Activity Diagrams, aiming to integrate Modeling, Coding, and Test stages in a software process and to reduce costs and development efforts. The proposed approach suggests an early detection of defects even in the modeling stage, to prevent that unidentified defects are embedded in the coding stage. The work also presents the use of the generated test cases before and after the coding stage.
To verify the proposed approach, this work also presents the EasyTest Tool to provide interoperability with the JUnit framework.
Test Automation; Model-Based Testing; Gray-Box Testing; JUnit; TDD.